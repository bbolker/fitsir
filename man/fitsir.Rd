% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fitsir.R
\name{fitsir}
\alias{fitsir}
\title{fitting function}
\usage{
fitsir(data, start, dist = c("gaussian2", "gaussian", "poisson",
  "quasipoisson", "nbinom", "nbinom1"), type = c("prevalence",
  "incidence", "death"), method = "BFGS", control = list(maxit =
  1e+05), tcol = "times", icol = "count", debug = FALSE, ...)
}
\arguments{
\item{data}{data frame}

\item{start}{starting parameters}

\item{dist}{conditional distribution of reported data}

\item{type}{type of reported data}

\item{method}{optimization method (see \link{mle2})}

\item{control}{control parameters for optimization}

\item{tcol}{column name for time variable}

\item{icol}{column name for count variable}

\item{debug}{print debugging output?}

\item{...}{Further arguments to pass to optimizer}

\item{optimizer}{optimizer to be used (see \link{mle2})}
}
\description{
fitting function
}
\examples{
harbin2 <- setNames(harbin,c("times","count"))
(f1 <- fitsir(harbin2, 
              start=c(beta=2, gamma=1, N=2e3, i0=0.0001, sigma=10),
              type="death"))
plot(f1)

## CRUDE R^2 analogue (don't trust it too far!)
ss <- SIR.detsim(harbin2$times,trans.pars(coef(f1)), type="death")
cc <- harbin2$count

cor(ss, cc)^2

f1_g2 <- fitsir(harbin2, 
             start=c(beta=2, gamma=1, N=2e3, i0=0.0001),
              family="gaussian2",
              type="death")
plot(f1)
}
\seealso{
startfun mle2
}
